// <auto-generated />
using System;
using BillChopBE.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BillChopBE.Migrations
{
    [DbContext(typeof(BillChopContext))]
    partial class BillChopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("BillChopBE.DataAccessLayer.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupContextId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GroupContextId");

                    b.HasIndex("PayerId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("BillChopBE.DataAccessLayer.Models.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LoaneeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BillId");

                    b.HasIndex("LoaneeId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("BillChopBE.DataAccessLayer.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("BillChopBE.DataAccessLayer.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.Property<Guid>("GroupsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("GroupUser");
                });

            modelBuilder.Entity("BillChopBE.DataAccessLayer.Models.Bill", b =>
                {
                    b.HasOne("BillChopBE.DataAccessLayer.Models.Group", "GroupContext")
                        .WithMany("Bills")
                        .HasForeignKey("GroupContextId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BillChopBE.DataAccessLayer.Models.User", "Payer")
                        .WithMany("Bills")
                        .HasForeignKey("PayerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GroupContext");

                    b.Navigation("Payer");
                });

            modelBuilder.Entity("BillChopBE.DataAccessLayer.Models.Expense", b =>
                {
                    b.HasOne("BillChopBE.DataAccessLayer.Models.Bill", "Bill")
                        .WithMany("Expenses")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BillChopBE.DataAccessLayer.Models.User", "Loanee")
                        .WithMany("Expenses")
                        .HasForeignKey("LoaneeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Loanee");
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.HasOne("BillChopBE.DataAccessLayer.Models.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BillChopBE.DataAccessLayer.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BillChopBE.DataAccessLayer.Models.Bill", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("BillChopBE.DataAccessLayer.Models.Group", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("BillChopBE.DataAccessLayer.Models.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Expenses");
                });
#pragma warning restore 612, 618
        }
    }
}
